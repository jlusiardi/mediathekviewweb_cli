#!/bin/env python

import argparse
import json

import mediathekviewweb


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="")
    parser.add_argument(
        "--station",
        dest="stations",
        action="append",
        default=[],
        help="limit the videos to a station. Multiple occurences of this "
        "parameter can be used and will return videos for each station.",
    )
    parser.add_argument(
        "--topic",
        dest="topics",
        action="append",
        default=[],
        help="limit the videos to a topic. Multiple occurences of this "
        "parameter can be used and will return videos for each topic.",
    )
    parser.add_argument(
        "--title",
        dest="titles",
        action="append",
        default=[],
        help="limit the videos to a title. Multiple occurences of this "
        "parameter can be used and will return videos for each title.",
    )
    parser.add_argument(
        "--description",
        dest="descriptions",
        action="append",
        default=[],
        help="limit the videos to a description. Multiple occurences of this "
        "parameter can be used and will return videos for each description.",
    )
    parser.add_argument(
        "--query",
        dest="query",
        help="limit the output to videos with titles and descriptions that "
        "match the queries.",
    )
    parser.add_argument(
        "--min-length",
        dest="min_length",
        help="the minimal length of the video in seconds",
    )
    parser.add_argument(
        "--max-length",
        dest="max_length",
        help="the maximal length of the video in seconds",
    )
    parser.add_argument(
        "--max-hits",
        dest="max_hits",
        default=20,
        help="limit the number of results",
    )
    parser.add_argument(
        "--offset", dest="offset", default=0, help="set the offset for paging"
    )
    args = parser.parse_args()

    result = mediathekviewweb.query_mediathekview(
        max_hits=args.max_hits,
        offset=args.offset,
        query=args.query,
        stations=args.stations,
        topics=args.topics,
        titles=args.titles,
        descriptions=args.descriptions,
    )

    print(json.dumps(result[0]["result"]["results"]))
